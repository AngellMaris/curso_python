# -*- coding: utf-8 -*-
"""Calculadora IR.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zoGFI6FsEnkxgzBGffRCMTow5VOBi_l5
"""

class TabelaIR():
  def __init__(self):
    self.tabela = [
        {"faixa": (0, 1903.98), "aliquota": 0, "deducao": 0},
        {"faixa": (1903.99, 2826.65), "aliquota": 7.5, "deducao": 142.80},
        {"faixa": (2826.66, 3751.05), "aliquota": 15, "deducao": 354.80},
        {"faixa": (3751.06, 4664.68), "aliquota": 22.5, "deducao": 636.13},
        {"faixa": (4664.69, float("inf")), "aliquota": 27.5, "deducao": 869.36},
    ]

class CalculadoraIR():
  def __init__ (self, salario_bruto, tabela_ir):
    self.salario_bruto = salario_bruto
    self.tabela_ir = tabela_ir

  def calcular(self):
    imposto = 0
    for faixa in self.tabela_ir.tabela:
      if self.salario_bruto > faixa["faixa"][0] and self.salario_bruto <= faixa["faixa"][1]:
        imposto = (self.salario_bruto * faixa["aliquota"]) / 100 - faixa["deducao"]
        break
    return imposto

tabela_ir = TabelaIR()
salario_bruto = float(input("Informe o seu salário bruto: "))
calculadora = CalculadoraIR(salario_bruto,tabela_ir)
imposto = calculadora.calcular()
print(f"O imposto de renda devido é de R$ {imposto:.2f}")

import unittest

class TestTabelaIR(unittest.TestCase):
  def setUp(self):
    self.tabela_ir = TabelaIR()

  def teste_init(self):
    self.assertEqual(len(self.tabela_ir.tabela),5)
    self.assertEqual(self.tabela_ir.tabela[0]["faixa"],(0,1903.98))
    self.assertEqual(self.tabela_ir.tabela[0]["aliquota"],0)
    self.assertEqual(self.tabela_ir.tabela[0]["deducao"],0)

class TestCalculadoraIR(unittest.TestCase):
  def setUp(self):
    self.tabela_ir = TabelaIR() 
    self.calculadora = CalculadoraIR(1000, self.tabela_ir)

  def test_calcular(self):
    imposto = self.calculadora.calcular()
    self.assertEqual(imposto, 0)

if __name__ == '__main__':
  unittest.main(argv=[''], exit = False)

class TestCalculadoraIR(unittest.TestCase):
  def test_calculadora(self):
    tabela_ir = TabelaIR()
    calculadora = CalculadoraIR(5000, tabela_ir)
    imposto = calculadora.calcular()
    self.assertEqual(imposto, 505.64)

if __name__ == '__main__':
      unittest.main(argv=[''], exit = False)